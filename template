package main

import (
	"bufio"
	"fmt"
	"os"
)

func main() {
	var mem [{{.Mem}}]int
	index := 0

	reader := bufio.NewReader(os.Stdin)
	_ = reader // Make sure this always compiles even if we never need the reader
	_ = fmt.Printf // Make sure this always compiles even if we never need the writer

{{.Body}}}

func readChar(reader *bufio.Reader) int {
	cr := '\r'
	nl := '\n'

	// Read the rune
	r, _, _ := reader.ReadRune()

	// If the consumed input was the carriage return or new line character then we are at the end of our input
	if r == cr || r == nl {
		// Make sure we clean up anything left (likely a new line if we got a carriage return)
		consumeRemaining(reader)
		return 0
	}

	return int(r)
}

func consumeRemaining(reader *bufio.Reader) {
	for reader.Buffered() > 0 {
		reader.ReadRune()
	}
}